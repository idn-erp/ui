/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import '@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/* Custom font */
@font-face {
    font-family: 'cairo-bold';
    src: url('/assets/fonts/cairo/Cairo-Bold.ttf');
}
@font-face {
    font-family: 'cairo-semibold';
    src: url('/assets/fonts/cairo/Cairo-SemiBold.ttf');
}
@font-face {
    font-family: 'cairo-extrabold';
    src: url('/assets/fonts/cairo/Cairo-ExtraBold.ttf');
}
@font-face {
    font-family: 'cairo-light';
    src: url('/assets/fonts/cairo/Cairo-Light.ttf');
}
@font-face {
    font-family: 'cairo-regular';
    src: url('/assets/fonts/cairo/Cairo-Regular.ttf');
}
@font-face {
    font-family: 'cairo-medium';
    src: url('/assets/fonts/cairo/Cairo-Medium.ttf');
}
*:not(ion-icon){
    font-family: 'cairo-regular' !important;
}

.split-pane-visible >.split-pane-side { flex-grow: 28; }
.split-pane-visible >.split-pane-main { flex-grow: 72; }
.split-pane-visible >.split-pane-side {
    min-width: 200px; /* Default: 270px */
    max-width: 304px; /* Same as when menu opens in mobile mode */
}

/** Bootstrap type input and selectbox with focus effect*/
input,select {
    background-color: transparent;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
    padding: 0.375rem 0.75rem;
    display: block;
    outline: none;
    width: 100%;
}
input:focus, select:focus {
    border-color: #007bff;
}

/* Custom table design */
.dn-table{width:100%;text-align: start !important;border:1px #eee solid !important;}
.dn-table thead tr{font-weight:bold;background-color: #f9f9f9;border-bottom: solid 2px teal;}
.dn-table td{padding:10px 5px;}
.dn-table td span:first-child{display:block !important; font-weight: bold !important;line-height: 1em !important;}
.dn-table td span:last-child{font-size:small !important;line-height: 1em !important;}
.dn-table td ion-badge{margin-inline-end: 4px !important;}
.dn-table tbody tr{border-bottom: solid 1px #999 !important;}

/* font size utilities */
.fs-xxsmall { font-size: xx-small !important; }
.fs-xsmall { font-size: x-small !important; }
.fs-smaller { font-size: smaller !important; }
.fs-small { font-size: small !important; }
.fs-normal { font-size: normal !important; }
.fs-medium { font-size: medium !important; }
.fs-large { font-size: large !important; }
.fs-xlarge { font-size: x-large !important; }
.fs-xxlarge { font-size: xx-large !important; }

/* Border basic classes */
.br { border: 1px solid #dee2e6 !important; }
.br-rounded { border-radius: 0.25rem !important; }

// Define sizes
$sizes: 0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50; 

// Define color variables
$_primary: (
    "key": "primary",
    "value": #007bff
);
$_secondary: (
    "key": "secondary",
    "value": #6c757d
);
$_success: (
    "key": "success",
    "value": #28a745
);
$_info: (
    "key": "info",
    "value": #17a2b8
);
$_warning: (
    "key": "warning",
    "value": #ffc107
);
$_danger: (
    "key": "danger",
    "value": #dc3545
);
$_light: (
    "key": "light",
    "value": #f8f9fa
);
$_dark: (
    "key": "dark",
    "value": #343a40
);

// Define Lighten and Darken Functions
@function lighten($cl, $percentage) {
    @return mix(white, $cl, $percentage);
}
@function darken($cl, $percentage) {
    @return mix(black, $cl, $percentage);
}

@each $color in $_primary, $_secondary, $_success, $_info, $_warning, $_danger, $_light, $_dark {

    // Create Classes for Background Colors
    .bg-#{map-get($color, 'key')} {
        background-color: map-get($color, 'value');
    }

    // Create Classes for Text Colors
    .fs-#{map-get($color, 'key')} {
        color: map-get($color, 'value');
    }

    // Create Classes for Border Colors
    .br-#{map-get($color, 'key')} {
        border: 1px solid map-get($color, 'value');
    }
    // Create Classes for Border Colors per side
    .br-t-#{map-get($color, 'key')} {
        border-top: 1px solid map-get($color, 'value');
    }
    .br-b-#{map-get($color, 'key')} {
        border-top: 1px solid map-get($color, 'value');
    }
    .br-l-#{map-get($color, 'key')} {
        border-top: 1px solid map-get($color, 'value');
    }
    .br-r-#{map-get($color, 'key')} {
        border-top: 1px solid map-get($color, 'value');
    }

    @each $s in $sizes {
        // Background Color Lighten and Darken Classes
        .bg-#{map-get($color, 'key')}-lg-#{$s} {
            background-color: lighten(map-get($color, 'value'), $s / 100);
        }
        
        .bg-#{map-get($color, 'key')}-dr-#{$s} {
            background-color: darken(map-get($color, 'value'), $s / 100);
        }
        
        // Text Color Lighten and Darken Classes
        .fc-#{map-get($color, 'key')}-lg-#{$s} {
            color: lighten(map-get($color, 'value'), $s / 100);
        }
        
        .fc-#{map-get($color, 'key')}-dr-#{$s} {
            color: darken(map-get($color, 'value'), $s / 100);
        }
        
        // Border Color Lighten and Darken Classes
        .br-#{map-get($color, 'key')}-lg-#{$s} {
            border: 1px solid lighten(map-get($color, 'value'), $s / 100);
        }
        
        .br-#{map-get($color, 'key')}-dr-#{$s} {
            border: 1px solid darken(map-get($color, 'value'), $s / 100);
        }
        
        // Margins and Paddings Classes
        .m-#{$s} { margin: #{$s}px !important; }
        .mt-#{$s} { margin-top: #{$s}px !important;}
        .mr-#{$s} { margin-right: #{$s}px !important; }
        .mb-#{$s} { margin-bottom: #{$s}px !important; }
        .ml-#{$s} { margin-left: #{$s}px !important; }
        .mx-#{$s} { margin-left: #{$s}px !important; margin-right: #{$s}px !important; }
        .my-#{$s} { margin-top: #{$s}px !important; margin-bottom: #{$s}px !important; }
        
        .p-#{$s} { padding: #{$s}px !important; }
        .pt-#{$s} { padding-top: #{$s}px !important;}
        .pr-#{$s} { padding-right: #{$s}px !important; }
        .pb-#{$s} { padding-bottom: #{$s}px !important; }
        .pl-#{$s} { padding-left: #{$s}px !important; }
        .px-#{$s} { padding-left: #{$s}px !important; padding-right: #{$s}px !important; }
        .py-#{$s} { padding-top: #{$s}px !important; padding-bottom: #{$s}px !important; }
    }
}





body[dir="rtl"] ion-icon{
    transform: scaleX(-1) !important;
}